package model;
// Generated 04/07/2017 11:51:55 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Testingartifact generated by hbm2java
 */
@Entity
@Table(name="testingartifact"
    ,catalog="provdmtest"
)
public class Testingartifact  implements java.io.Serializable {


     private String idtestingArtifact;
     private Project project;
     private Set<Testingsourcecode> testingsourcecodes = new HashSet<Testingsourcecode>(0);
     private Set<Testinglog> testinglogs = new HashSet<Testinglog>(0);

    public Testingartifact() {
    }

	
    public Testingartifact(String idtestingArtifact, Project project) {
        this.idtestingArtifact = idtestingArtifact;
        this.project = project;
    }
    public Testingartifact(String idtestingArtifact, Project project, Set<Testingsourcecode> testingsourcecodes, Set<Testinglog> testinglogs) {
       this.idtestingArtifact = idtestingArtifact;
       this.project = project;
       this.testingsourcecodes = testingsourcecodes;
       this.testinglogs = testinglogs;
    }
   
     @Id 

    
    @Column(name="idtestingArtifact", unique=true, nullable=false, length=45)
    public String getIdtestingArtifact() {
        return this.idtestingArtifact;
    }
    
    public void setIdtestingArtifact(String idtestingArtifact) {
        this.idtestingArtifact = idtestingArtifact;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="project_idproject", nullable=false)
    public Project getProject() {
        return this.project;
    }
    
    public void setProject(Project project) {
        this.project = project;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="testingartifact")
    public Set<Testingsourcecode> getTestingsourcecodes() {
        return this.testingsourcecodes;
    }
    
    public void setTestingsourcecodes(Set<Testingsourcecode> testingsourcecodes) {
        this.testingsourcecodes = testingsourcecodes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="testingartifact")
    public Set<Testinglog> getTestinglogs() {
        return this.testinglogs;
    }
    
    public void setTestinglogs(Set<Testinglog> testinglogs) {
        this.testinglogs = testinglogs;
    }




}


