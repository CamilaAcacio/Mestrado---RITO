package model;
// Generated 04/07/2017 11:51:55 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Testingmethod generated by hbm2java
 */
@Entity
@Table(name="testingmethod"
    ,catalog="provdmtest"
)
public class Testingmethod  implements java.io.Serializable {


     private Integer idtestingMethod;
     private Testingclass testingclass;
     private String name;
     private String skipped;
     private Set<Covers> coverses = new HashSet<Covers>(0);
     private Set<Testingmethodexecution> testingmethodexecutions = new HashSet<Testingmethodexecution>(0);
     private Set<Used> useds = new HashSet<Used>(0);

    public Testingmethod() {
    }

	
    public Testingmethod(Testingclass testingclass) {
        this.testingclass = testingclass;
    }
    public Testingmethod(Testingclass testingclass, String name, String skipped, Set<Covers> coverses, Set<Testingmethodexecution> testingmethodexecutions, Set<Used> useds) {
       this.testingclass = testingclass;
       this.name = name;
       this.skipped = skipped;
       this.coverses = coverses;
       this.testingmethodexecutions = testingmethodexecutions;
       this.useds = useds;
    }
    
    public Testingmethod(Testingclass testingclass, String name, String skipped) {
       this.testingclass = testingclass;
       this.name = name;
       this.skipped = skipped;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idtestingMethod", unique=true, nullable=false)
    public Integer getIdtestingMethod() {
        return this.idtestingMethod;
    }
    
    public void setIdtestingMethod(Integer idtestingMethod) {
        this.idtestingMethod = idtestingMethod;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="testingClass_idtestingClass", nullable=false)
    public Testingclass getTestingclass() {
        return this.testingclass;
    }
    
    public void setTestingclass(Testingclass testingclass) {
        this.testingclass = testingclass;
    }

    
    @Column(name="name", length=100)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="skipped", length=45)
    public String getSkipped() {
        return this.skipped;
    }
    
    public void setSkipped(String skipped) {
        this.skipped = skipped;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="testingmethod")
    public Set<Covers> getCoverses() {
        return this.coverses;
    }
    
    public void setCoverses(Set<Covers> coverses) {
        this.coverses = coverses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="testingmethod")
    public Set<Testingmethodexecution> getTestingmethodexecutions() {
        return this.testingmethodexecutions;
    }
    
    public void setTestingmethodexecutions(Set<Testingmethodexecution> testingmethodexecutions) {
        this.testingmethodexecutions = testingmethodexecutions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="testingmethod")
    public Set<Used> getUseds() {
        return this.useds;
    }
    
    public void setUseds(Set<Used> useds) {
        this.useds = useds;
    }




}


