package model;
// Generated 04/07/2017 11:51:55 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Agent generated by hbm2java
 */
@Entity
@Table(name="agent"
    ,catalog="provdmtest"
)
public class Agent  implements java.io.Serializable {


     private String idagent;
     private Set<Person> persons = new HashSet<Person>(0);
     private Set<Actedonbehalfof> actedonbehalfofsForAgentIdagent = new HashSet<Actedonbehalfof>(0);
     private Set<Actedonbehalfof> actedonbehalfofsForAgentIdagent1 = new HashSet<Actedonbehalfof>(0);

    public Agent() {
    }

	
    public Agent(String idagent) {
        this.idagent = idagent;
    }
    public Agent(String idagent, Set<Person> persons, Set<Actedonbehalfof> actedonbehalfofsForAgentIdagent, Set<Actedonbehalfof> actedonbehalfofsForAgentIdagent1) {
       this.idagent = idagent;
       this.persons = persons;
       this.actedonbehalfofsForAgentIdagent = actedonbehalfofsForAgentIdagent;
       this.actedonbehalfofsForAgentIdagent1 = actedonbehalfofsForAgentIdagent1;
    }
   
     @Id 

    
    @Column(name="idagent", unique=true, nullable=false, length=45)
    public String getIdagent() {
        return this.idagent;
    }
    
    public void setIdagent(String idagent) {
        this.idagent = idagent;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="agent")
    public Set<Person> getPersons() {
        return this.persons;
    }
    
    public void setPersons(Set<Person> persons) {
        this.persons = persons;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="agentByAgentIdagent")
    public Set<Actedonbehalfof> getActedonbehalfofsForAgentIdagent() {
        return this.actedonbehalfofsForAgentIdagent;
    }
    
    public void setActedonbehalfofsForAgentIdagent(Set<Actedonbehalfof> actedonbehalfofsForAgentIdagent) {
        this.actedonbehalfofsForAgentIdagent = actedonbehalfofsForAgentIdagent;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="agentByAgentIdagent1")
    public Set<Actedonbehalfof> getActedonbehalfofsForAgentIdagent1() {
        return this.actedonbehalfofsForAgentIdagent1;
    }
    
    public void setActedonbehalfofsForAgentIdagent1(Set<Actedonbehalfof> actedonbehalfofsForAgentIdagent1) {
        this.actedonbehalfofsForAgentIdagent1 = actedonbehalfofsForAgentIdagent1;
    }




}


