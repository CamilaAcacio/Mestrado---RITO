package model;
// Generated 04/07/2017 11:51:55 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Testingsuite generated by hbm2java
 */
@Entity
@Table(name="testingsuite"
    ,catalog="provdmtest"
)
public class Testingsuite  implements java.io.Serializable {


     private String idtestingSuite;
     private Project project;
     private Set<Wasderivedfrom> wasderivedfroms = new HashSet<Wasderivedfrom>(0);
     private Set<Testingclass> testingclasses = new HashSet<Testingclass>(0);
     private Set<Testingsuiteexecution> testingsuiteexecutions = new HashSet<Testingsuiteexecution>(0);
     private Set<Composedof> composedofs = new HashSet<Composedof>(0);
     private Set<Used> useds = new HashSet<Used>(0);

    public Testingsuite() {
    }

	
    public Testingsuite(String idtestingSuite, Project project) {
        this.idtestingSuite = idtestingSuite;
        this.project = project;
    }
    public Testingsuite(String idtestingSuite, Project project, Set<Wasderivedfrom> wasderivedfroms, Set<Testingclass> testingclasses, Set<Testingsuiteexecution> testingsuiteexecutions, Set<Composedof> composedofs, Set<Used> useds) {
       this.idtestingSuite = idtestingSuite;
       this.project = project;
       this.wasderivedfroms = wasderivedfroms;
       this.testingclasses = testingclasses;
       this.testingsuiteexecutions = testingsuiteexecutions;
       this.composedofs = composedofs;
       this.useds = useds;
    }   
   
     @Id 

    
    @Column(name="idtestingSuite", unique=true, nullable=false, length=45)
    public String getIdtestingSuite() {
        return this.idtestingSuite;
    }
    
    public void setIdtestingSuite(String idtestingSuite) {
        this.idtestingSuite = idtestingSuite;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="project_idproject", nullable=false)
    public Project getProject() {
        return this.project;
    }
    
    public void setProject(Project project) {
        this.project = project;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="testingsuite")
    public Set<Wasderivedfrom> getWasderivedfroms() {
        return this.wasderivedfroms;
    }
    
    public void setWasderivedfroms(Set<Wasderivedfrom> wasderivedfroms) {
        this.wasderivedfroms = wasderivedfroms;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="testingsuite")
    public Set<Testingclass> getTestingclasses() {
        return this.testingclasses;
    }
    
    public void setTestingclasses(Set<Testingclass> testingclasses) {
        this.testingclasses = testingclasses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="testingsuite")
    public Set<Testingsuiteexecution> getTestingsuiteexecutions() {
        return this.testingsuiteexecutions;
    }
    
    public void setTestingsuiteexecutions(Set<Testingsuiteexecution> testingsuiteexecutions) {
        this.testingsuiteexecutions = testingsuiteexecutions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="testingsuite")
    public Set<Composedof> getComposedofs() {
        return this.composedofs;
    }
    
    public void setComposedofs(Set<Composedof> composedofs) {
        this.composedofs = composedofs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="testingsuite")
    public Set<Used> getUseds() {
        return this.useds;
    }
    
    public void setUseds(Set<Used> useds) {
        this.useds = useds;
    }




}


