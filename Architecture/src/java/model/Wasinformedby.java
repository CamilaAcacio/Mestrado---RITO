package model;
// Generated 04/07/2017 11:51:55 by Hibernate Tools 4.3.1


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Wasinformedby generated by hbm2java
 */
@Entity
@Table(name="wasinformedby"
    ,catalog="provdmtest"
)
public class Wasinformedby  implements java.io.Serializable {


     private Integer idwasInformedBy;
     private Testingclassexecution testingclassexecution;
     private Testingmethodexecution testingmethodexecution;
     private Testingsuiteexecution testingsuiteexecution;

    public Wasinformedby() {
    }

    public Wasinformedby(Testingclassexecution testingclassexecution, Testingmethodexecution testingmethodexecution, Testingsuiteexecution testingsuiteexecution) {
       this.testingclassexecution = testingclassexecution;
       this.testingmethodexecution = testingmethodexecution;
       this.testingsuiteexecution = testingsuiteexecution;
    }
    
    public Wasinformedby(Testingsuiteexecution testingsuiteexecution, Testingclassexecution testingclassexecution) {
       this.testingclassexecution = testingclassexecution;
       this.testingsuiteexecution = testingsuiteexecution;
    }
    
    public Wasinformedby(Testingclassexecution testingclassexecution, Testingmethodexecution testingmethodexecution) {
       this.testingclassexecution = testingclassexecution;
       this.testingmethodexecution = testingmethodexecution;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idwasInformedBy", unique=true, nullable=false)
    public Integer getIdwasInformedBy() {
        return this.idwasInformedBy;
    }
    
    public void setIdwasInformedBy(Integer idwasInformedBy) {
        this.idwasInformedBy = idwasInformedBy;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="testingClassExecution_idtestingClassExecution")
    public Testingclassexecution getTestingclassexecution() {
        return this.testingclassexecution;
    }
    
    public void setTestingclassexecution(Testingclassexecution testingclassexecution) {
        this.testingclassexecution = testingclassexecution;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="testingMethodExecution_idtestingMethodExection")
    public Testingmethodexecution getTestingmethodexecution() {
        return this.testingmethodexecution;
    }
    
    public void setTestingmethodexecution(Testingmethodexecution testingmethodexecution) {
        this.testingmethodexecution = testingmethodexecution;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="testingSuiteExecution_idtestingSuiteExecution")
    public Testingsuiteexecution getTestingsuiteexecution() {
        return this.testingsuiteexecution;
    }
    
    public void setTestingsuiteexecution(Testingsuiteexecution testingsuiteexecution) {
        this.testingsuiteexecution = testingsuiteexecution;
    }




}


