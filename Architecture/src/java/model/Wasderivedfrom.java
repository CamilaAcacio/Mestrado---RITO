package model;
// Generated 04/07/2017 11:51:55 by Hibernate Tools 4.3.1


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Wasderivedfrom generated by hbm2java
 */
@Entity
@Table(name="wasderivedfrom"
    ,catalog="provdmtest"
)
public class Wasderivedfrom  implements java.io.Serializable {


     private Integer idwasDerivedFrom;
     private Softwareartifact softwareartifact;
     private Softwarebuild softwarebuild;
     private Softwareexecutable softwareexecutable;
     private Sourcecode sourcecode;
     private Testinglog testinglog;
     private Testingsourcecode testingsourcecode;
     private Testingsuite testingsuite;

    public Wasderivedfrom() {
    }

    public Wasderivedfrom(Softwareartifact softwareartifact, Softwarebuild softwarebuild, Softwareexecutable softwareexecutable, Sourcecode sourcecode, Testinglog testinglog, Testingsourcecode testingsourcecode, Testingsuite testingsuite) {
       this.softwareartifact = softwareartifact;
       this.softwarebuild = softwarebuild;
       this.softwareexecutable = softwareexecutable;
       this.sourcecode = sourcecode;
       this.testinglog = testinglog;
       this.testingsourcecode = testingsourcecode;
       this.testingsuite = testingsuite;
    }
    
    public Wasderivedfrom(Softwarebuild softwarebuild, Softwareartifact softwareartifact) {
       this.softwareartifact = softwareartifact;
       this.softwarebuild = softwarebuild;
    }
    
    public Wasderivedfrom(Testinglog testinglog, Testingsuite testingsuite) {
       this.testinglog = testinglog;
       this.testingsuite = testingsuite;
    }
    
    public Wasderivedfrom(Softwareexecutable softwareexecutable, Softwareartifact softwareartifact) {
       this.softwareexecutable = softwareexecutable;
       this.softwareartifact = softwareartifact;
    }
    
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idwasDerivedFrom", unique=true, nullable=false)
    public Integer getIdwasDerivedFrom() {
        return this.idwasDerivedFrom;
    }
    
    public void setIdwasDerivedFrom(Integer idwasDerivedFrom) {
        this.idwasDerivedFrom = idwasDerivedFrom;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="softwareArtifact_idsoftwareArtifact")
    public Softwareartifact getSoftwareartifact() {
        return this.softwareartifact;
    }
    
    public void setSoftwareartifact(Softwareartifact softwareartifact) {
        this.softwareartifact = softwareartifact;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="softwareBuild_idsoftwareBuild")
    public Softwarebuild getSoftwarebuild() {
        return this.softwarebuild;
    }
    
    public void setSoftwarebuild(Softwarebuild softwarebuild) {
        this.softwarebuild = softwarebuild;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="softwareExecutable_idsoftwareExecutable")
    public Softwareexecutable getSoftwareexecutable() {
        return this.softwareexecutable;
    }
    
    public void setSoftwareexecutable(Softwareexecutable softwareexecutable) {
        this.softwareexecutable = softwareexecutable;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="sourceCode_idsourceCode")
    public Sourcecode getSourcecode() {
        return this.sourcecode;
    }
    
    public void setSourcecode(Sourcecode sourcecode) {
        this.sourcecode = sourcecode;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="testingLog_idtestingLog")
    public Testinglog getTestinglog() {
        return this.testinglog;
    }
    
    public void setTestinglog(Testinglog testinglog) {
        this.testinglog = testinglog;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="testingSourceCode_idtestingSourceCode")
    public Testingsourcecode getTestingsourcecode() {
        return this.testingsourcecode;
    }
    
    public void setTestingsourcecode(Testingsourcecode testingsourcecode) {
        this.testingsourcecode = testingsourcecode;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="testingSuite_idtestingSuite")
    public Testingsuite getTestingsuite() {
        return this.testingsuite;
    }
    
    public void setTestingsuite(Testingsuite testingsuite) {
        this.testingsuite = testingsuite;
    }




}


